import re

def check_password_strength(password):
    # Define criteria
    length_error = len(password) < 8
    digit_error = re.search(r"\d", password) is None
    uppercase_error = re.search(r"[A-Z]", password) is None
    lowercase_error = re.search(r"[a-z]", password) is None
    symbol_error = re.search(r"[!@#$%^&*(),.?\":{}|<>]", password) is None

    # Calculate overall strength
    errors = [length_error, digit_error, uppercase_error, lowercase_error, symbol_error]
    score = 5 - sum(errors)

    # Determine strength level
    if score == 5:
        strength = "Very Strong"
    elif score == 4:
        strength = "Strong"
    elif score == 3:
        strength = "Moderate"
    elif score == 2:
        strength = "Weak"
    else:
        strength = "Very Weak"

    return strength, errors

def main():
    print("Password Complexity Checker")
    password = input("Enter a password to check its strength: ")

    strength, errors = check_password_strength(password)
    print(f"Password Strength: {strength}")

    if any(errors):
        print("Suggestions to improve your password:")
        if errors[0]:
            print("- Make sure your password is at least 8 characters long.")
        if errors[1]:
            print("- Include at least one number.")
        if errors[2]:
            print("- Add at least one uppercase letter.")
        if errors[3]:
            print("- Add at least one lowercase letter.")
        if errors[4]:
            print("- Include at least one special character (e.g., !, @, #, $).")

if __name__ == "__main__":
    main()
